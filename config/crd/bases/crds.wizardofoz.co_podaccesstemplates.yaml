---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: podaccesstemplates.crds.wizardofoz.co
spec:
  group: crds.wizardofoz.co
  names:
    kind: PodAccessTemplate
    listKind: PodAccessTemplateList
    plural: podaccesstemplates
    singular: podaccesstemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Is template ready?
      jsonPath: .status.ready
      name: Ready
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PodAccessTemplate is the Schema for the accesstemplates API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PodAccessTemplateSpec defines the desired state of AccessTemplate
            properties:
              accessConfig:
                description: |-
                  AccessConfig provides a common struct for defining who has access to the resources this
                  template controls, how long they have access, etc.
                properties:
                  accessCommand:
                    default: kubectl exec -ti -n {{ .Metadata.Namespace }} {{ .Metadata.Name
                      }} -- /bin/sh
                    description: |-
                      AccessCommand is used to describe to the user how they can make use of their temporary access.
                      The AccessCommand can reference data from a Pod ObjectMeta.
                    type: string
                  allowedGroups:
                    description: |-
                      AllowedGroups lists out the groups (in string name form) that will be allowed to Exec into
                      the target pod.
                    items:
                      type: string
                    type: array
                  defaultDuration:
                    default: 1h
                    description: |-
                      DefaultDuration sets the default time that an access request resource will live. Must
                      be set below MaxDuration.


                      Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                    type: string
                  maxDuration:
                    default: 24h
                    description: |-
                      MaxDuration sets the maximum duration that an access request resource can request to
                      stick around.


                      Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                    type: string
                required:
                - allowedGroups
                - defaultDuration
                - maxDuration
                type: object
              controllerTargetMutationConfig:
                description: |-
                  ControllerTargetMutationConfig contains parameters that allow for customizing the copy of a
                  controller-sourced PodSpec. This setting is only valid if controllerTargetRef is set.
                properties:
                  args:
                    description: Args will override the Spec.containers[0].args property.
                    items:
                      type: string
                    type: array
                  command:
                    description: |-
                      Command is used to override the .Spec.containers[0].command field for the target Pod and
                      Container. This can be handy in ensuring that the default application does not start up and
                      do any work. If set, this overrides the Spec.conatiners[0].args property as well.
                    items:
                      type: string
                    type: array
                  defaultContainerName:
                    description: |-
                      DefaultContainerName allows the operator to define which container is considered the default
                      container, and that is the container that this mutation configuration applies to. If not set,
                      then the first container defined in the spec.containers[] list is patched.
                    type: string
                  env:
                    description: |-
                      Env allows overriding specific environment variables (or adding new ones). Note, we do not
                      purge the original environmnt variables.
                    items:
                      $ref: '#/definitions/k8s.io~1api~1core~1v1~0EnvVar'
                    type: array
                  keepLivenessProbe:
                    default: false
                    description: |-
                      By default, Oz wipes out the PodSpec
                      [`livenessProbe`](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#podspec-v1-core)
                      configuration for the default container so that the container does not
                      get terminated if the main application is not running or passing checks.
                      This setting overrides that behavior.
                    type: boolean
                  keepReadinessProbe:
                    default: false
                    description: |-
                      By default, Oz wipes out the PodSpec
                      [`readinessProbe`](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#podspec-v1-core)
                      configuration for the default container so that the container does not
                      get terminated if the main application is not running or passing checks.
                      This setting overrides that behavior.
                    type: boolean
                  keepStartupProbe:
                    default: false
                    description: |-
                      By default, Oz wipes out the PodSpec
                      [`startupProbe`](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#podspec-v1-core)
                      configuration for the default container so that the container does not
                      get terminated if the main application is not running or passing checks.
                      This setting overrides that behavior.
                    type: boolean
                  keepTerminationGracePeriod:
                    default: false
                    description: |-
                      By default, Oz wipes out the PodSpec
                      [`terminationGracePeriodSeconds`](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#podspec-v1-core)
                      setting on Pods to ensure that they can be killed as soon as the
                      AccessRequest expires. This flag overrides that behavior.
                    type: boolean
                  keepTopologySpreadConstraints:
                    description: |-
                      By default, Oz wipes out the PodSpec
                      [`topologySpreadConstraints`](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling)
                      configuration for the Pod because these access pods are not part of the
                      same group of pods that are passing traffic. This setting overrides that behavior.
                    type: boolean
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: |-
                      If supplied, Oz will insert these
                      [nodeSelector](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling)
                      into the target
                      [`PodTemplateSpec`](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#podtemplatespec-v1-core).
                    type: object
                  patchSpecOperations:
                    description: |-
                      PatchSpecOperations contains a list of JSON patch operations to apply to the PodSpec.
                      [`JSONPatch`](https://www.rfc-editor.org/rfc/rfc6902.html)
                    items:
                      description: JSONPatchOperation represents a JSON Patch operation
                        defined in https://www.rfc-editor.org/rfc/rfc6902.html
                      properties:
                        op:
                          description: |-
                            JSONPatchOperationType represents a JSON Patch operation defined in
                            https://www.rfc-editor.org/rfc/rfc6902.html. Eg, "add", "remove", etc.
                          enum:
                          - add
                          - remove
                          - replace
                          - move
                          - copy
                          - test
                          type: string
                        path:
                          type: string
                        value:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                      required:
                      - op
                      - path
                      type: object
                    type: array
                  podAnnotations:
                    additionalProperties:
                      type: string
                    description: |-
                      If supplied, these
                      [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                      are applied to the target
                      [`PodTemplateSpec`](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podtemplatespec-v1-core).
                      These are merged into the final Annotations. If you want to _replace_
                      the annotations, make sure to set the `purgeAnnotations` flag to `true`.
                    type: object
                  podLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      If supplied, Oz will insert these
                      [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
                      into the target
                      [`PodTemplateSpec`](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#podtemplatespec-v1-core).
                      By default Oz purges all Labels from pods (to prevent the new Pod from
                      having traffic routed to it), so this is effectively a new set of labels
                      applied to the Pod.
                    type: object
                  purgeAnnotations:
                    default: false
                    description: |-
                      By default, Oz keeps the original
                      [`PodTemplateSpec`](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podtemplatespec-v1-core)
                      `metadata.annotations` field. If you want to purge this, set this flag
                      to `true.`
                    type: boolean
                  resources:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                    description: |-
                      If supplied these resource requirements will override the default .Spec.containers[0].resource requested for the
                      the pod. Note though that we do not override all of the resource requests in the Pod because there may be many
                      containers.
                type: object
              controllerTargetRef:
                description: ControllerTargetRef provides a pattern for referencing
                  objects from another API in a generic way.
                properties:
                  apiVersion:
                    description: |-
                      Defines the "APIVersion" of the resource being referred to. Eg, "apps/v1".


                      TODO: Figure out how to regex validate that it has a "/" in it
                    enum:
                    - apps/v1
                    - argoproj.io/v1alpha1
                    type: string
                  kind:
                    description: Defines the "Kind" of resource being referred to.
                    enum:
                    - Deployment
                    - DaemonSet
                    - StatefulSet
                    - Rollout
                    type: string
                  name:
                    description: Defines the "metadata.Name" of the target resource.
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              maxCpu:
                anyOf:
                - type: integer
                - type: string
                description: Upper bound of the CPU that an AccessRequest can make
                  against this tmemplate for the primary container.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              maxMemory:
                anyOf:
                - type: integer
                - type: string
                description: Upper bound of the memory that an AccessRequest can make
                  against this template for the primary container.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              maxStorage:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  Upper bound of the ephemeral storage that an AccessRequest can make against this template for
                  the primary container.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              podSpec:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0PodSpec'
                description: PodSpec ...
            required:
            - accessConfig
            type: object
          status:
            description: PodAccessTemplateStatus defines the observed state of PodAccessTemplate
            properties:
              accessMessage:
                description: |-
                  AccessMessage is used to describe to the user how they can make use of their temporary access
                  request. Eg, for a PodAccessTemplate the value set here would be something like:


                    "Access Granted, connect to your pod with: kubectl exec -ti -n namespace pod-xyz -- /bin/bash"
                type: string
              conditions:
                description: Current status of the Access Template
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              ready:
                description: Simple boolean to let us know if the resource is ready
                  for use or not
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
